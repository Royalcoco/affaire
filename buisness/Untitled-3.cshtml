# -*- coding: utf-8 -*-

def afficher_symbole(symbole):
    print(symbole)
    keyboard.write_symbol()
def afficher_symbole(symbole):
    symboles = {
        "clavier": "⌨️",
        "écran": "🖥️",
        "dossier": "📁",
    }
    print(symboles[symbole])
def afficher_symbole(symbole):

    if symbole in symboles:
        print(f"Le symbole pour {symbole} est : {symboles[symbole]}")
    else:
        print(f"Aucun symbole n'est défini pour {symbole}")

# Exemples d'utilisation
afficher_symbole("clavier")  # Affiche le symbole d'un clavier
afficher_symbole("écran")    # Affiche le symbole d'un écran
afficher_symbole("souris")   # Aucun symbole n'est défini pour "souris"

# Exemples d'utilisation
afficher_symbole("⌨️")  # Affiche le symbole d'un clavier
afficher_symbole("🖥️")  # Affiche le symbole d'un écran
afficher_symbole("📁")   # Affiche le symbole d'un dossier
afficher_symbole("📂")   # Affiche le symbole d'un dossier ouvert
afficher_symbole("📄")   # Affiche le symbole d'un fichier
afficher_symbole("📃")   # Affiche le symbole d'un fichier avec une page
afficher_symbole("📑")   # Affiche le symbole d'un classeur
afficher_symbole("📊")   # Affiche le symbole d'un graphique
afficher_symbole("📈")   # Affiche le symbole d'un graphique croissant
afficher_symbole("📉")   # Affiche le symbole d'un graphique décroissant
afficher_symbole("📝")   # Affiche le symbole d'un crayon
afficher_symbole("📌")   # Affiche le symbole d'une punaise
afficher_symbole("📍")   # Affiche le symbole d'une punaise avec un point
afficher_symbole("📎")   # Affiche le symbole d'une punaise avec un trombone
afficher_symbole("🖇️")  # Affiche le symbole d'une punaise avec un trombone
afficher_symbole("📏")   # Affiche le symbole d'une règle
afficher_symbole("📐")   # Affiche le symbole d'une équerre
afficher_symbole("✂️")   # Affiche le symbole d'une paire de ciseaux
afficher_symbole("🗃️")  # Affiche le symbole d'une boîte de classement
afficher_symbole("🗄️")  # Affiche le symbole d'un classeur
afficher_symbole("🗑️")  # Affiche le symbole d'une corbeille
afficher_symbole("🔒")   # Affiche le symbole d'un cadenas
afficher_symbole("🔓")   # Affiche le symbole d'un cadenas ouvert
afficher_symbole("🔏")   # Affiche le symbole d'un cadenas fermé avec une clé
afficher_symbole("🔐")   # Affiche le symbole d'un cadenas ouvert avec une clé
afficher_symbole("🔑")   # Affiche le symbole d'une clé
afficher_symbole("🗝️")  # Affiche le symbole d'une clé ancienne
afficher_symbole("🔨")   # Affiche le symbole d'un marteau
afficher_symbole("🛠️")  # Affiche le symbole d'un marteau et d'une clé
afficher_symbole("⛏️")   # Affiche le symbole d'une pioche
afficher_symbole("⚒️")   # Affiche le symbole d'un marteau et d'une enclume
afficher_symbole("🔧")   # Affiche le symbole d'une clé à molette
afficher_symbole("🔩")   # Affiche le symbole d'un boulon et d'un écrou
afficher_symbole("⚙️")   # Affiche le symbole d'une roue dentée
afficher_symbole("🗜️")  # Affiche le symbole d'une pince
afficher_symbole("⚖️")   # Affiche le symbole d'une balance
afficher_symbole("🔗")   # Affiche le symbole d'une chaîne
afficher_symbole("⛓️")   # Affiche le symbole d'une chaîne avec des maillons
afficher_symbole("🧰")   # Affiche le symbole d'une boîte à outils
afficher_symbole("🧲")   # Affiche le symbole d'un aimant
afficher_symbole("🧪")   # Affiche le symbole d'une éprouvette
afficher_symbole("🧫")   # Affiche le symbole d'une boîte de Petri
afficher_symbole("🧬")   # Affiche le symbole d'une double hélice d'ADN
afficher_symbole("🔬")   # Affiche le symbole d'un microscope
afficher_symbole("🔭")   # Affiche le symbole d'un télescope
afficher_symbole("📡")   # Affiche le symbole d'une antenne parabolique
afficher_symbole("💉")   # Affiche le symbole d'une seringue
afficher_symbole("🩸")   # Affiche le symbole d'une goutte de sang
afficher_symbole("💊")   # Affiche le symbole d'un comprimé
afficher_symbole("🩹")   # Affiche le symbole d'un pansement
afficher_symbole("🩺")   # Affiche le symbole d'un stéthoscope
afficher_symbole("🚪")   # Affiche le symbole d'une porte
afficher_symbole("🛏️")  # Affiche le symbole d'un lit
afficher_symbole("🛋️")  # Affiche le symbole d'un canapé
afficher_symbole("🪑")   # Affiche le symbole d'une chaise
afficher_symbole("🚽")   # Affiche le symbole d'une cuvette de toilettes
afficher_symbole("🚿")   # Affiche le symbole d'une douche
afficher_symbole("🛁")   # Affiche le symbole d'une baignoire
afficher_symbole("🪒")   # Affiche le symbole d'un rasoir
afficher_symbole("🧴")   # Affiche le symbole d'un flacon de lotion
afficher_symbole("🧷")   # Affiche le symbole d'une épingle de sûreté
afficher_symbole("🧹")   # Affiche le symbole d'un balai
afficher_symbole("🧺")   # Affiche le symbole d'un panier à linge
afficher_symbole("🧻")   # Affiche le symbole d'un rouleau de papier toilette
afficher_symbole("🧼")   # Affiche le symbole d'un savon
afficher_symbole("🧽")   # Affiche le symbole d'une éponge
afficher_symbole("🧯")   # Affiche le symbole d'un extincteur
afficher_symbole("🛒")   # Affiche le symbole d'un chariot de supermarché
afficher_symbole("🚬")   # Affiche le symbole d'une cigarette
afficher_symbole("⚰️")   # Affiche le symbole d'un cercueil
afficher_symbole("⚱️")   # Affiche le symbole d'une urne funéraire
afficher_symbole("🗿")   # Affiche le symbole d'une statue Moaï
afficher_symbole("🚰")   # Affiche le symbole d'une fontaine d'eau potable
afficher_symbole("🚿")   # Affiche le symbole d'une douche
afficher_symbole("🛁")   # Affiche le symbole d'une baignoire
afficher_symbole("🛀")   # Affiche le symbole d'une personne prenant un bain
afficher_symbole("🧴")   # Affiche le symbole d'un flacon de lotion
afficher_symbole("🧷")   # Affiche le symbole d'une épingle de sûreté
afficher_symbole("🧹")   # Affiche le symbole d'un balai
afficher_symbole("🧺")   # Affiche le symbole d'un panier à linge
afficher_symbole("🧻")   # Affiche le symbole d'un rouleau de papier toilette
afficher_symbole("🧼")   # Affiche le symbole d'un savon
afficher_symbole("🧽")   # Affiche le symbole d'une éponge
afficher_symbole("🧯")   # Affiche le symbole d'un extincteur
afficher_symbole("🛒")   # Affiche le symbole d'un chariot de supermarché
afficher_symbole("🚬")   # Affiche le symbole d'une cigarette
afficher_symbole("⚰️")   # Affiche le symbole d'un cercueil
afficher_symbole("⚱️")   # Affiche le symbole d'une urne funéraire
afficher_symbole("🗿")   # Affiche le symbole d'une statue Moaï
afficher_symbole("🚰")   # Affiche le symbole d'une fontaine d'eau potable
afficher_symbole("🚿")   # Affiche le symbole d'une douche
afficher_symbole("🛁")   # Affiche le symbole d'une baignoire
afficher_symbole("🛀")   # Affiche le symbole d'une personne prenant un bain
afficher_symbole("🧴")   # Affiche le symbole d'un flacon de lotion
afficher_symbole("🧷")   # Affiche le symbole d'une épingle de sûreté
afficher_symbole("🧹")   # Affiche le symbole d'un balai
afficher_symbole("🧺")   # Affiche le symbole d'un panier à linge
afficher_symbole("🧻")   # Affiche le symbole d'un rouleau de papier toilette
afficher_symbole("🧼")   # Affiche le symbole d'un savon
afficher_symbole("🧽")   # Affiche le symbole d'une éponge
afficher_symbole("🧯")   # Affiche le symbole d'un extincteur
afficher_symbole("🛒")   # Affiche le symbole d'un chariot de supermarché
afficher_symbole("🚬")   # Affiche le symbole d'une cigarette
afficher_symbole("⚰️")   # Affiche le symbole d'un cercueil

# Affiche le symbole d'une urne funéraire
afficher_symbole("⚱️")

# Affiche le symbole d'une statue Moaï
afficher_symbole("🗿")

# Affiche le symbole d'une fontaine d'eau potable
afficher_symbole("🚰")

# Affiche le symbole d'une douche
afficher_symbole("🚿")

# Affiche le symbole d'une baignoire
afficher_symbole("🛁")

# Affiche le symbole d'une personne prenant un bain
afficher_symbole("🛀")

# Affiche le symbole d'un flacon de lotion
afficher_symbole("🧴")

# Affiche le symbole d'une épingle de sûreté
afficher_symbole("🧷")

# Affiche le symbole d'un balai
afficher_symbole("🧹")

# Affiche le symbole d'un panier à linge
afficher_symbole("🧺")

# Affiche le symbole d'un rouleau de papier toilette
afficher_symbole("🧻")

# Affiche le symbole d'un savon
afficher_symbole("🧼")

# Affiche le symbole d'une éponge
afficher_symbole("🧽")

# Affiche le symbole d'un extincteur
afficher_symbole("🧯")

# Affiche le symbole d'un chariot de supermarché
afficher_symbole("🛒")

# Affiche le symbole d'une cigarette
afficher_symbole("🚬")

# Affiche le symbole d'un cercueil
afficher_symbole("⚰️")


    if symbole in symboles:
        print(f"Le symbole pour {symbole} est : {symboles[symbole]}")
    else:
        print(f"Aucun symbole n'est défini pour {symbole}")

# Exemples d'utilisation
afficher_symbole("clavier")  # Affiche le symbole d'un clavier
afficher_symbole("écran")    # Affiche le symbole d'un écran
afficher_symbole("souris")   # Aucun symbole n'est défini pour "souris"
afficher_symbole("clavier")  # Affiche le symbole d'un clavier
afficher_symbole("écran")    # Affiche le symbole d'un écran
afficher_symbole("souris")   # Aucun symbole n'est défini pour "souris"
afficher_symbole("clavier")  # Affiche le symbole d'un clavier
afficher_symbole("écran")    # Affiche le symbole d'un écran
afficher_symbole("souris")   # Aucun symbole n'est défini pour "souris"
afficher_symbole("clavier")  # Affiche le symbole d'un clavier
afficher_symbole("écran")    # Affiche le symbole d'un écran
afficher_symbole("souris")   # Aucun symbole n'est défini pour "souris"
afficher_symbole("clavier")  # Affiche le symbole d'un clavier
afficher_symbole("écran")    # Affiche le symbole d'un écran
afficher_symbole("souris")   # Aucun symbole n'est défini pour "souris"
afficher_symbole("clavier")  # Affiche le symbole d'un clavier
afficher_symbole("écran")    # Affiche le symbole d'un écran
afficher_symbole("souris")   # Aucun symbole n'est défini pour "souris"

# Affiche le symbole d'un clavier
afficher_symbole("clavier")

# Affiche le symbole d'un écran
afficher_symbole("écran")

# Aucun symbole n'est défini pour "souris"
afficher_symbole("souris")

# Affiche le symbole d'un clavier
afficher_symbole("clavier")

# Affiche le symbole d'un écran
afficher_symbole("écran")

# Aucun symbole n'est défini pour "souris"
Copy'path("souris") open with __FILE__ drawing._EDG_COMPILER_1.0.0.0
Spl.'(ItemThumbnailImage .......createNFTree
    if symbole in symboles:
        print(f"Le symbole pour {symbole} est : {symboles[symbole]}")
    else:
        print(f"Aucun symbole n'est défini pour {symbole}") #Définir symbole pour('souris#1') cat$char blend angle with stomp , define circle in up-center of symbole {(symboles[symbole}
        print(f"Aucun symbole n'est défini pour {symbole}") #Définir symbole pour('souris#1') cat$char blend angle with stomp , define circle in up-center of symbole {(symboles[symbole}
        print(f"Aucun symbole n'est défini pour {symbole}") #Définir symbole pour('souris#1') cat$char blend angle with stomp , define circle in up-center of symbole {(symboles[symbole}
        print(f"Aucun symbole n'est défini pour {symbole}") #Définir symbole pour('souris#1') cat$char blend angle with stomp , define circle in up-center of symbole {(symboles[symbole}
        print(f"Aucun symbole n'est défini pour {symbole}") #Définir symbole pour('souris#1') cat$char blend angle with stomp , define circle in up-center of symbole {(symboles[symbole}
        print(f"Aucun symbole n'est défini pour {symbole}") #Définir symbole pour('souris#1') cat$char blend angle with stomp , define circle in up-center of symbole {(symboles[symbole}
        print(f"Aucun symbole n'est défini pour {symbole}") #Définir symbole pour('souris#1') cat$char blend angle with stomp , define circle in up-center of symbole {(symboles[symbole}
        print(f"Aucun symbole n'est défini pour {symbole}") #Définir symbole pour('souris#1') cat$char blend angle with stomp , define circle in up-center of symbole {(symboles[symbole}
        print(f"Aucun symbole n'est défini pour {symbole}") #Définir symbole pour('souris#1') cat$char blend angle with stomp , define circle in up-center of symbole {(symboles[symbole}

__STDCPP_DEFAULT_NEW_ALIGNMENT__ 1 catch$'prize' ('respond {value}') catch blockchain'°pop-up° {'souris#1'} , reduis avec ouverture par clef {symboles[symbole} // utilise symbole #("clef_| modifie couleur avec |souris°}
__EDG_VERSION__ 1 catch$'prize' ('respond {value}') catch blockchain'°pop-up° {'souris#1'} , reduis avec ouverture par clef {symboles[symbole} // utilise symbole #("clef_| modifie couleur avec |souris°}

import_:/(.}°pop-up°)°p
import_:/(.}°pop-up°)°p
import_:/(.}°pop-up°)°p
import_:/(.}°pop-up°)°p
import_:/(.}°pop-up°)°p
import_:/(.}°pop-up°)°p
import_:/(.}°pop-up°)°p
import_:/(.}°pop-up°)°p
import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p
import_:/(.}°pop-up°)°p
import_:/(.}°pop-up°)°p
import_:/(.}°pop-up°)°p
import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p
import_:/(.}°pop-up°)°p
import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p
import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

import_:/(.}°pop-up°)°p

operator bool() const noexcept; // true if the operator is true and false otherwise ( injected others colors )
operator bool() const noexcept; // true if the operator is true and false otherwise ( injected others colors )
operator bool() const noexcept; // true if the operator is true and false otherwise ( injected others colors )
operator bool() const noexcept; // true if the operator is true and false otherwise ( injected others colors )
operator bool() const noexcept; // true if the operator is true and false otherwise ( injected others colors )
operator bool() const noexcept; // true if the operator is true and false otherwise ( injected others colors )
operator bool() const noexcept; // true if the operator is true and false otherwise ( injected others colors )
operator bool() const noexcept; // true if the operator is true and false otherwise ( injected others colors )
operator bool() const noexcept; // true if the operator is true and false otherwise ( injected others colors )
operator bool() const noexcept; // true if the operator is true and false otherwise ( injected others colors )

designed by match_colors() const'[__true +1 , false='true+1']' = 't'];
designed by match_colors() const'[__true +1 , false='true+1']' = 't'];  
designed by match_colors() const'[__true +1 , false='true+1']' = 't'];
designed by match_colors() const'[__true +1 , false='true+1']' = 't'];
designed by match_colors() const'[__true +1 , false='true+1']' = 't'];
designed by match_colors() const'[__true +1 , false='true+1']' = 't'];
designed by match_colors() const'[__true +1 , false='true+1']' = 't'];
designed by match_colors() const'[__true +1 , false='true+1']' = 't'];
designed by match_colors() const'[__true +1 , false='true+1']' = 't'];
designed by match_colors() const'[__true +1 , false='true+1']' = 't'];

class NFT:
    def __init__(self, owner, content):
        self.owner = owner
        self.content = content
        self.timestamp = datetime.datetime.now()
        self.hash = self.calculate_hash()

    def calculate_hash(self):
        data = str(self.owner) + str(self.content) + str(self.timestamp)
        return hashlib.sha256(data.encode()).hexdigest()

class Blockchain:
    def __init__(self):
        self.chain = []

    def add_block(self, block):
        self.chain.append(block)

    def display_chain(self):
        for block in self.chain:
            print(f"Owner: {block.owner}")
            print(f"Content: {block.content}")
            print(f"Timestamp: {block.timestamp}")
            print(f"Hash: {block.hash}")
            print("------------------------")

# Exemple d'utilisation
blockchain = Blockchain()

# Création d'un NFT et ajout à la blockchain
nft1 = NFT("Alice", "Contenu du NFT 1")
blockchain.add_block(nft1)

# Création d'un NFT et ajout à la blockchain
nft2 = NFT("Bob", "Contenu du NFT 2")
blockchain.add_block(nft2)

# Affichage de la blockchain
blockchain.display_chain()

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

# Affichage du hash du premier NFT
print(f"Hash du premier NFT: {nft1.hash}")

# Affichage du hash du deuxième NFT
print(f"Hash du deuxième NFT: {nft2.hash}")

Options open computer acces filesystem with computer command, search txt.crypto.add_value_Programs to get the program encrypted files ;//.>>><:<:<:<:<:<:<:<:
:>:<:<:<:< /;//calculate derive of hash with default values and add scrpit with cryptographically
@{
    string emotion = "heureux"; // Valeur de l'émotion (peut être dynamique)
    string emoji = string.Empty;

    switch (emotion)
    {
        case "heureux":
            emoji = "😃";
            break;
        case "triste":
            emoji = "😢";
            break;
        case "colère":
            emoji = "😡";
            break;
        default:
            emoji = "😐";
            break;
    }
}

<h1>Émotion : @emotion</h1>
<h2>Emoji : @emoji</h2>
<h3>Hash : @hash</h3>
<h4>Hash : @hash</h4>
<h5>Hash : @hash</h5>
<h6>Hash : @hash</h6>
<h7>Hash : @hash</h7>
<h8>Hash : @hash</h8>
<h9>Hash : @hash</h9>
<h10>Hash : @hash</h10>
<h11>Hash : @hash</h11>
<h12>Hash : @hash</h12>
<h13>Hash : @hash</h13>
<h14>Hash : @hash</h14>
<h15>Hash : @hash</h15>
<h16>Hash : @hash</h16>
<h17>Hash : @hash</h17>
<h18>Hash : @hash</h18>
<h19>Hash : @hash</h19>
<h20>Hash : @hash</h20>
<h21>Hash : @hash</h21>
<h22>Hash : @hash</h22>
<h23>Hash : @hash</h23>
<h24>Hash : @hash</h24>
<h25>Hash : @hash</h25>
<h26>Hash : @hash</h26>
<h27>Hash : @hash</h27>
<h28>Hash : @hash</h28>
<h29>Hash : @hash</h29>
<h30>Hash : @hash</h30>
<h31>Hash : @hash</h31>
<h32>Hash : @hash</h32>